{"version":3,"sources":["api/apiHandler.js","utils/urlUtils.js","components/Header/User/UserView.jsx","components/Header/HeaderView.jsx","components/Table/Table.jsx","components/Channels/ChannelsView.jsx","components/Playlists/PlaylistsView.jsx","containers/Channels/channelsSlice.js","containers/Channels/ChannelsPage.jsx","components/PlaylistItems/PlaylistItemsView.jsx","containers/Playlists/playlistsSlice.js","containers/Playlists/PlaylistsPage.jsx","App.jsx","store.js","index.jsx"],"names":["googleAuth","googleUser","discoveryDocs","scope","isAuthorized","toggleUser","signOut","signIn","listChannels","id","pageToken","to","gapi","client","youtube","channels","list","part","maxResults","mine","listPlaylists","channelId","playlists","listPlaylistItems","playlistId","playlistItems","listVideos","videos","getURLObj","url","startsWith","URL","e","channelRegExp","RegExp","getChannelId","memoize","urlObj","test","pathname","exec","getPlaylistId","searchParams","has","get","UserView","user","userPopout","useMemo","userInfo","src","image","alt","name","email","type","onClick","icon","faSignOutAlt","faSignInAlt","placement","trigger","overlay","faUserCircle","HeaderView","history","useHistory","useState","currentUrl","setCurrentUrl","searchDisabled","setSearchDisabled","onSearchButtonClicked","push","href","rel","target","faGithub","value","onChange","onKeyDown","event","key","placeholder","disabled","faSearch","Table","columns","data","hasMore","next","useTable","useGridLayout","getTableProps","headerGroups","rows","prepareRow","dataLength","length","loader","className","map","headerGroup","headers","column","getHeaderProps","render","row","cells","cell","getCellProps","ChannelsView","channelsList","Header","accessor","Cell","original","cloneDeep","channel","snippet","publishedAt","substring","PlaylistsView","playlistsList","channelView","playlist","defaultProps","initialState","channelsError","channelsToken","playlistsError","playlistsToken","channelsSlice","createSlice","reducers","listChannelsSuccess","state","action","payload","prevPageToken","concat","items","nextPageToken","listChannelsFailed","listPlaylistsSuccess","listPlaylistsFailed","actions","fetchPlaylists","dispatch","a","err","response","result","ChannelsPage","useDispatch","useParams","useEffect","fetchChannels","useSelector","channelsPage","status","toast","error","message","fetchMorePlaylists","useCallback","PlaylistItemsView","playlistItemsList","video","position","playlistItem","contentDetails","duration","replace","toLowerCase","playlistItemsError","playlistItemsToken","playlistItemsSlice","listPlaylistItemsSuccess","listPlaylistItemsFailed","fetchVideos","ids","resourceId","videoId","forEach","i","fetchPlaylistItems","PlaylistsPage","playlistsPage","fetchMorePlaylistItems","App","ready","setReady","setUser","load","init","apiKey","clientId","auth2","getAuthInstance","updateAuthStatus","currentUser","hasGrantedScopes","profile","getBasicProfile","getName","getEmail","getImageUrl","isSignedIn","listen","initClient","transition","Flip","autoClose","closeOnClick","pauseOnFocusLoss","pauseOnHover","path","rootReducer","combineReducers","channelsReducer","playlistsReducer","persistedReducer","persistReducer","storage","version","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","REHYDRATE","persistor","persistStore","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b4c9a36f.chunk.js","sourcesContent":["import to from \"await-to-js\";\n\nimport { apiKey, clientId } from \"./client_secrets.json\";\n\nconst discoveryDocs = [\n  \"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\",\n];\nconst scope = \"https://www.googleapis.com/auth/youtube.readonly\";\n\nlet googleAuth;\nlet googleUser;\nlet isAuthorized = false;\n\nconst toggleUser = () => {\n  if (isAuthorized) {\n    googleAuth.signOut();\n  } else {\n    googleAuth.signIn();\n  }\n};\n\nconst initClient = (setReady, setUser) => {\n  gapi.load(\"client:auth2\", async () => {\n    await gapi.client.init({\n      apiKey,\n      clientId,\n      discoveryDocs,\n      scope,\n    });\n    setReady(true);\n\n    googleAuth = gapi.auth2.getAuthInstance();\n    const updateAuthStatus = () => {\n      googleUser = googleAuth.currentUser.get();\n      isAuthorized = googleUser.hasGrantedScopes(scope);\n\n      const user = { isAuthorized };\n      if (isAuthorized) {\n        const profile = googleUser.getBasicProfile();\n        user.name = profile.getName();\n        user.email = profile.getEmail();\n        user.image = profile.getImageUrl();\n      }\n      setUser(user);\n    };\n\n    googleAuth.isSignedIn.listen(updateAuthStatus);\n    updateAuthStatus();\n  });\n};\n\nconst listChannels = {\n  channelId: (id, pageToken) => {\n    if (id === \"mine\") {\n      return to(\n        gapi.client.youtube.channels.list({\n          part: [\"snippet,statistics\"],\n          maxResults: 50,\n          mine: true,\n          pageToken,\n        })\n      );\n    }\n\n    return to(\n      gapi.client.youtube.channels.list({\n        part: [\"snippet,statistics\"],\n        maxResults: 50,\n        id,\n        pageToken,\n      })\n    );\n  },\n};\n\nconst listPlaylists = {\n  channelId: (channelId, pageToken) => {\n    if (channelId === \"mine\") {\n      return to(\n        gapi.client.youtube.playlists.list({\n          part: [\"snippet,contentDetails\"],\n          maxResults: 50,\n          mine: true,\n          pageToken,\n        })\n      );\n    }\n\n    return to(\n      gapi.client.youtube.playlists.list({\n        part: [\"snippet,contentDetails\"],\n        maxResults: 50,\n        channelId,\n        pageToken,\n      })\n    );\n  },\n\n  playlistId: (id, pageToken) => {\n    return to(\n      gapi.client.youtube.playlists.list({\n        part: [\"snippet,contentDetails\"],\n        maxResults: 50,\n        id,\n        pageToken,\n      })\n    );\n  },\n};\n\nconst listPlaylistItems = {\n  playlistId: (playlistId, pageToken) => {\n    return to(\n      gapi.client.youtube.playlistItems.list({\n        part: [\"snippet\"],\n        maxResults: 50,\n        playlistId,\n        pageToken,\n      })\n    );\n  },\n};\n\nconst listVideos = {\n  videoId: (id, pageToken) => {\n    return to(\n      gapi.client.youtube.videos.list({\n        part: [\"snippet,contentDetails,statistics\"],\n        maxResults: 50,\n        id,\n        pageToken,\n      })\n    );\n  },\n};\n\nexport {\n  toggleUser,\n  initClient,\n  listChannels,\n  listPlaylists,\n  listPlaylistItems,\n  listVideos,\n};\n","import memoize from \"lodash/memoize\";\n\nconst getURLObj = (url) => {\n  if (url) {\n    try {\n      if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n        return new URL(url);\n      }\n      return new URL(`https://${url}`);\n    } catch (e) {}\n  }\n  return null;\n};\n\nconst channelRegExp = new RegExp(/^\\/channel\\/([\\w-]+)$/);\nconst getChannelId = memoize((url) => {\n  const urlObj = getURLObj(url);\n  if (urlObj && channelRegExp.test(urlObj.pathname)) {\n    return channelRegExp.exec(urlObj.pathname)[1];\n  }\n  return null;\n});\n\nconst getPlaylistId = memoize((url) => {\n  const urlObj = getURLObj(url);\n  if (urlObj && urlObj.searchParams.has(\"list\")) {\n    return urlObj.searchParams.get(\"list\");\n  }\n  return null;\n});\n\nexport { getChannelId, getPlaylistId };\n","import {\n  faSignInAlt,\n  faSignOutAlt,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"rc-tooltip\";\nimport React, { useMemo } from \"react\";\n\nimport \"./UserView.css\";\n\nconst UserView = ({ user, toggleUser }) => {\n  const userPopout = useMemo(() => {\n    let userInfo;\n    if (user.isAuthorized) {\n      userInfo = (\n        <>\n          <img id=\"userImage\" src={user.image} alt=\"\" />\n          <span id=\"userName\">{user.name}</span>\n          <span id=\"userEmail\">{user.email}</span>\n        </>\n      );\n    } else {\n      userInfo = (\n        <>\n          <span id=\"signInPrompt\">\n            Sign in to access your\n            <br />\n            channel & private playlists.\n          </span>\n        </>\n      );\n    }\n\n    return (\n      <div id=\"userPopout\">\n        {userInfo}\n        <button id=\"toggleUser\" type=\"button\" onClick={toggleUser}>\n          <FontAwesomeIcon\n            icon={user.isAuthorized ? faSignOutAlt : faSignInAlt}\n          />\n        </button>\n      </div>\n    );\n  }, [user, toggleUser]);\n\n  return (\n    <Tooltip placement=\"left\" trigger=\"click\" overlay={userPopout}>\n      <button id=\"user\" type=\"button\">\n        <FontAwesomeIcon icon={faUserCircle} />\n      </button>\n    </Tooltip>\n  );\n};\n\nUserView.propTypes = {\n  user: PropTypes.shape({\n    isAuthorized: PropTypes.bool.isRequired,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    image: PropTypes.string,\n  }).isRequired,\n  toggleUser: PropTypes.func.isRequired,\n};\n\nexport default UserView;\n","import { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getChannelId, getPlaylistId } from \"../../utils/urlUtils\";\n\nimport UserView from \"./User/UserView\";\n\nimport \"./HeaderView.css\";\n\nconst HeaderView = ({ user, toggleUser }) => {\n  const history = useHistory();\n\n  const [currentUrl, setCurrentUrl] = useState(\"youtu.be/channel/mine\");\n  const [searchDisabled, setSearchDisabled] = useState(false);\n\n  const onCurrentUrlChanged = (e) => {\n    setCurrentUrl(e.target.value);\n    if (getChannelId(e.target.value) || getPlaylistId(e.target.value)) {\n      setSearchDisabled(false);\n    } else {\n      setSearchDisabled(true);\n    }\n  };\n\n  const onSearchButtonClicked = () => {\n    if (getChannelId(currentUrl)) {\n      history.push(`/channel/${getChannelId(currentUrl)}`);\n    } else if (getPlaylistId(currentUrl)) {\n      history.push(`/playlist/${getPlaylistId(currentUrl)}`);\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      onSearchButtonClicked();\n    }\n  };\n\n  return (\n    <div id=\"headerView\">\n      <a\n        id=\"github\"\n        href=\"https://github.com/utkarshgupta137/youtube-playlist-manager\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n      >\n        <FontAwesomeIcon icon={faGithub} />\n      </a>\n      <input\n        id=\"url\"\n        type=\"text\"\n        value={currentUrl}\n        onChange={onCurrentUrlChanged}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Channel or Playlist URL\"\n      />\n      <button\n        id=\"search\"\n        type=\"button\"\n        disabled={searchDisabled}\n        onClick={onSearchButtonClicked}\n      >\n        <FontAwesomeIcon icon={faSearch} />\n      </button>\n      <UserView user={user} toggleUser={toggleUser} />\n    </div>\n  );\n};\n\nHeaderView.propTypes = {\n  user: PropTypes.shape({\n    isAuthorized: PropTypes.bool.isRequired,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    image: PropTypes.string,\n  }).isRequired,\n  toggleUser: PropTypes.func.isRequired,\n};\n\nexport default HeaderView;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useGridLayout, useTable } from \"react-table\";\n\nimport \"./Table.css\";\n\nconst Table = ({ columns, data, hasMore, next }) => {\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGridLayout\n  );\n\n  return (\n    <InfiniteScroll\n      dataLength={rows.length}\n      hasMore={hasMore}\n      next={next}\n      loader={<div id=\"loader\">Loading...</div>}\n    >\n      <div {...getTableProps()} className=\"table\">\n        {headerGroups.map((headerGroup) => {\n          return headerGroup.headers.map((column) => {\n            return (\n              <div\n                key={column.id}\n                {...column.getHeaderProps()}\n                className=\"header\"\n              >\n                {column.render(\"Header\")}\n              </div>\n            );\n          });\n        })}\n        {rows.map((row) => {\n          return (\n            prepareRow(row) ||\n            row.cells.map((cell) => {\n              return (\n                <div {...cell.getCellProps()} className=\"cell\">\n                  {cell.render(\"Cell\")}\n                </div>\n              );\n            })\n          );\n        })}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default Table;\n","import cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\n\nimport Table from \"../Table/Table\";\n\nimport \"./ChannelsView.css\";\n\nconst ChannelsView = ({ channelsList, hasMore, next }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        Header: \"Channel title\",\n        accessor: \"snippet.title\",\n        Cell: (e) => {\n          return (\n            <a\n              href={`https://youtube.com/channel/${e.row.original.id}`}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              {e.value}\n            </a>\n          );\n        },\n      },\n      {\n        Header: \"Created on\",\n        accessor: \"snippet.publishedAt\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"snippet.description\",\n      },\n      // {\n      //   Header: \"Views\",\n      //   accessor: \"statistics.viewCount\",\n      // },\n      // {\n      //   Header: \"Subscribers\",\n      //   accessor: \"statistics.subscriberCount\",\n      // },\n      {\n        Header: \"Videos\",\n        accessor: \"statistics.videoCount\",\n      },\n    ];\n  }, []);\n\n  const data = useMemo(() => {\n    return cloneDeep(channelsList).map((channel) => {\n      channel.snippet.publishedAt = channel.snippet.publishedAt.substring(\n        0,\n        10\n      );\n\n      return channel;\n    });\n  }, [channelsList]);\n\n  return (\n    <div id=\"channelsView\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nChannelsView.propTypes = {\n  channelsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default ChannelsView;\n","import cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Table from \"../Table/Table\";\n\nimport \"./PlaylistsView.css\";\n\nconst PlaylistsView = ({ playlistsList, hasMore, next, channelView }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        Header: \"Created by\",\n        accessor: \"snippet.channelTitle\",\n        Cell: (e) => {\n          return channelView ? (\n            e.value\n          ) : (\n            <Link to={`/channel/${e.row.original.snippet.channelId}`}>\n              {e.value}\n            </Link>\n          );\n        },\n      },\n      {\n        Header: \"Published on\",\n        accessor: \"snippet.publishedAt\",\n      },\n      {\n        Header: \"Playlist title\",\n        accessor: \"snippet.title\",\n        Cell: (e) => {\n          return channelView ? (\n            <Link to={`/playlist/${e.row.original.id}`}>{e.value}</Link>\n          ) : (\n            <a\n              href={`https://www.youtube.com/playlist?list=${e.row.original.id}`}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              {e.value}\n            </a>\n          );\n        },\n      },\n      {\n        Header: \"Description\",\n        accessor: \"snippet.description\",\n      },\n      {\n        Header: \"Videos\",\n        accessor: \"contentDetails.itemCount\",\n      },\n    ];\n  }, [channelView]);\n\n  const data = useMemo(() => {\n    return cloneDeep(playlistsList).map((playlist) => {\n      playlist.snippet.publishedAt = playlist.snippet.publishedAt.substring(\n        0,\n        10\n      );\n\n      return playlist;\n    });\n  }, [playlistsList]);\n\n  return (\n    <div id=\"playlistsView\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nPlaylistsView.propTypes = {\n  playlistsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n  channelView: PropTypes.bool,\n};\n\nPlaylistsView.defaultProps = {\n  channelView: false,\n};\n\nexport default PlaylistsView;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { listChannels, listPlaylists } from \"../../api/apiHandler\";\n\nconst initialState = {\n  channelsError: {},\n  channelsList: [],\n  channelsToken: \"\",\n  playlistsError: {},\n  playlistsList: [],\n  playlistsToken: \"\",\n};\n\nconst channelsSlice = createSlice({\n  name: \"channels\",\n  initialState,\n  reducers: {\n    listChannelsSuccess(state, action) {\n      state.channelsError = initialState.channelsError;\n\n      if (action.payload.prevPageToken) {\n        state.channelsList = state.channelsList.concat(action.payload.items);\n      } else {\n        state.channelsList = action.payload.items;\n      }\n      state.channelsToken = action.payload.nextPageToken;\n    },\n    listChannelsFailed(state, action) {\n      state.channelsList = initialState.channelsList;\n      state.channelsToken = initialState.channelsToken;\n\n      state.channelsError = action.payload;\n    },\n    listPlaylistsSuccess(state, action) {\n      state.playlistsError = initialState.playlistsError;\n\n      if (action.payload.prevPageToken) {\n        state.playlistsList = state.playlistsList.concat(action.payload.items);\n      } else {\n        state.playlistsList = action.payload.items;\n      }\n      state.playlistsToken = action.payload.nextPageToken;\n    },\n    listPlaylistsFailed(state, action) {\n      state.playlistsList = initialState.playlistsList;\n      state.playlistsToken = initialState.playlistsToken;\n\n      state.playlistsError = action.payload;\n    },\n  },\n});\n\nconst {\n  listChannelsSuccess,\n  listChannelsFailed,\n  listPlaylistsSuccess,\n  listPlaylistsFailed,\n} = channelsSlice.actions;\n\nconst fetchChannels = (channelId, pageToken) => {\n  return async (dispatch) => {\n    const [err, response] = await listChannels.channelId(channelId, pageToken);\n\n    if (!err && response.result.items && response.result.items.length > 0) {\n      dispatch(listChannelsSuccess(response.result));\n    } else {\n      dispatch(listChannelsFailed(err || response));\n    }\n  };\n};\n\nconst fetchPlaylists = (channelId, pageToken) => {\n  return async (dispatch) => {\n    const [err, response] = await listPlaylists.channelId(channelId, pageToken);\n\n    if (!err && response.result.items) {\n      dispatch(listPlaylistsSuccess(response.result));\n    } else {\n      dispatch(listPlaylistsFailed(err || response));\n    }\n  };\n};\n\nexport { fetchChannels, fetchPlaylists };\n\nexport default channelsSlice.reducer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport ChannelsView from \"../../components/Channels/ChannelsView\";\nimport PlaylistsView from \"../../components/Playlists/PlaylistsView\";\n\nimport { fetchChannels, fetchPlaylists } from \"./channelsSlice\";\n\nconst ChannelsPage = () => {\n  const dispatch = useDispatch();\n  const { channelId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchChannels(channelId));\n    dispatch(fetchPlaylists(channelId));\n  }, [channelId, dispatch]);\n\n  const {\n    channelsError,\n    channelsList,\n    playlistsList,\n    playlistsToken,\n  } = useSelector((state) => {\n    return state.channelsPage;\n  });\n\n  useEffect(() => {\n    if (channelsError.status === 200) {\n      toast.error(\"Channel not found. Check the URL.\");\n    } else if (channelsError.status === 401) {\n      toast.error(\"You must sign in to access this channel.\");\n    } else if (channelsError.result) {\n      toast.error(channelsError.result.error.message);\n    }\n  }, [channelsError]);\n\n  const fetchMorePlaylists = useCallback(() => {\n    dispatch(fetchPlaylists(channelId, playlistsToken));\n  }, [channelId, playlistsToken, dispatch]);\n\n  return (\n    <>\n      <ChannelsView\n        channelsList={channelsList}\n        hasMore={false}\n        next={() => {}}\n      />\n      <PlaylistsView\n        playlistsList={playlistsList}\n        hasMore={!!playlistsToken}\n        next={fetchMorePlaylists}\n        channelView\n      />\n    </>\n  );\n};\n\nexport default ChannelsPage;\n","import cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\n\nimport Table from \"../Table/Table\";\n\nimport \"./PlaylistItemsView.css\";\n\nconst PlaylistItemsView = ({ playlistItemsList, hasMore, next }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        Header: \"Position\",\n        accessor: \"snippet.position\",\n      },\n      {\n        Header: \"Added by\",\n        accessor: \"snippet.channelTitle\",\n      },\n      {\n        Header: \"Added on\",\n        accessor: \"snippet.publishedAt\",\n      },\n      {\n        Header: \"Video title\",\n        accessor: \"video.snippet.title\",\n        Cell: (e) => {\n          return (\n            <a\n              href={`https://www.youtube.com/watch?v=${e.row.original.video.id}&list=${e.row.original.snippet.playlistId}&index=${e.row.original.snippet.position}`}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              {e.value}\n            </a>\n          );\n        },\n      },\n      {\n        Header: \"Channel title\",\n        accessor: \"video.snippet.channelTitle\",\n      },\n      {\n        Header: \"Published on\",\n        accessor: \"video.snippet.publishedAt\",\n      },\n      {\n        Header: \"Duration\",\n        accessor: \"video.contentDetails.duration\",\n      },\n      // {\n      //   Header: \"View Count\",\n      //   accessor: \"video.statistics.viewCount\",\n      // },\n      // {\n      //   Header: \"Like Count\",\n      //   accessor: \"video.statistics.likeCount\",\n      // },\n      // {\n      //   Header: \"Dislike Count\",\n      //   accessor: \"video.statistics.dislikeCount\",\n      // },\n      // {\n      //   Header: \"Comment Count\",\n      //   accessor: \"video.statistics.commentCount\",\n      // },\n    ];\n  }, []);\n\n  const data = useMemo(() => {\n    return cloneDeep(playlistItemsList).map((playlistItem) => {\n      playlistItem.snippet.position += 1;\n      playlistItem.snippet.publishedAt = playlistItem.snippet.publishedAt.substring(\n        0,\n        10\n      );\n\n      if (playlistItem.video) {\n        playlistItem.video.snippet.publishedAt = playlistItem.video.snippet.publishedAt.substring(\n          0,\n          10\n        );\n        playlistItem.video.contentDetails.duration = playlistItem.video.contentDetails.duration\n          .replace(\"P\", \"\")\n          .replace(\"T\", \"\")\n          .toLowerCase();\n      }\n\n      return playlistItem;\n    });\n  }, [playlistItemsList]);\n\n  return (\n    <div id=\"playlistItemsView\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nPlaylistItemsView.propTypes = {\n  playlistItemsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default PlaylistItemsView;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport {\n  listPlaylists,\n  listPlaylistItems,\n  listVideos,\n} from \"../../api/apiHandler\";\n\nconst initialState = {\n  playlistItemsError: {},\n  playlistItemsList: [],\n  playlistItemsToken: \"\",\n  playlistsError: {},\n  playlistsList: [],\n  playlistsToken: \"\",\n};\n\nconst playlistItemsSlice = createSlice({\n  name: \"playlistItems\",\n  initialState,\n  reducers: {\n    listPlaylistItemsSuccess(state, action) {\n      state.playlistItemsError = initialState.playlistItemsError;\n\n      if (action.payload.prevPageToken) {\n        state.playlistItemsList = state.playlistItemsList.concat(\n          action.payload.items\n        );\n      } else {\n        state.playlistItemsList = action.payload.items;\n      }\n      state.playlistItemsToken = action.payload.nextPageToken;\n    },\n    listPlaylistItemsFailed(state, action) {\n      state.playlistItemsList = initialState.playlistItemsList;\n      state.playlistItemsToken = initialState.playlistItemsToken;\n\n      state.playlistItemsError = action.payload;\n    },\n    listPlaylistsSuccess(state, action) {\n      state.playlistsError = initialState.playlistsError;\n\n      if (action.payload.prevPageToken) {\n        state.playlistsList = state.playlistsList.concat(action.payload.items);\n      } else {\n        state.playlistsList = action.payload.items;\n      }\n      state.playlistsToken = action.payload.nextPageToken;\n    },\n    listPlaylistsFailed(state, action) {\n      state.playlistsList = initialState.playlistsList;\n      state.playlistsToken = initialState.playlistsToken;\n\n      state.playlistsError = action.payload;\n    },\n  },\n});\n\nconst {\n  listPlaylistItemsSuccess,\n  listPlaylistItemsFailed,\n  listPlaylistsSuccess,\n  listPlaylistsFailed,\n} = playlistItemsSlice.actions;\n\nconst fetchVideos = (result) => {\n  return async (dispatch) => {\n    const ids = result.items.map((playlistItem) => {\n      return playlistItem.snippet.resourceId.videoId;\n    });\n    const [err, response] = await listVideos.videoId(ids);\n\n    if (!err && response.result.items) {\n      result.items.forEach((playlistItem, i) => {\n        playlistItem.video = response.result.items[i];\n      });\n\n      dispatch(listPlaylistItemsSuccess(result));\n    } else {\n      dispatch(listPlaylistItemsFailed(err || response));\n    }\n  };\n};\n\nconst fetchPlaylistItems = (playlistId, pageToken) => {\n  return async (dispatch) => {\n    const [err, response] = await listPlaylistItems.playlistId(\n      playlistId,\n      pageToken\n    );\n\n    if (!err && response.result.items) {\n      if (response.result.items.length > 0) {\n        dispatch(fetchVideos(response.result));\n      } else {\n        dispatch(listPlaylistItemsSuccess(response.result));\n      }\n    } else {\n      dispatch(listPlaylistItemsFailed(err || response));\n    }\n  };\n};\n\nconst fetchPlaylists = (playlistId, pageToken) => {\n  return async (dispatch) => {\n    const [err, response] = await listPlaylists.playlistId(\n      playlistId,\n      pageToken\n    );\n\n    if (!err && response.result.items && response.result.items.length > 0) {\n      dispatch(listPlaylistsSuccess(response.result));\n    } else {\n      dispatch(listPlaylistsFailed(err || response));\n    }\n  };\n};\n\nexport { fetchPlaylistItems, fetchPlaylists };\n\nexport default playlistItemsSlice.reducer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport PlaylistItemsView from \"../../components/PlaylistItems/PlaylistItemsView\";\nimport PlaylistsView from \"../../components/Playlists/PlaylistsView\";\n\nimport { fetchPlaylists, fetchPlaylistItems } from \"./playlistsSlice\";\n\nconst PlaylistsPage = () => {\n  const dispatch = useDispatch();\n  const { playlistId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchPlaylists(playlistId));\n    dispatch(fetchPlaylistItems(playlistId));\n  }, [playlistId, dispatch]);\n\n  const {\n    playlistsError,\n    playlistsList,\n    playlistItemsList,\n    playlistItemsToken,\n  } = useSelector((state) => {\n    return state.playlistsPage;\n  });\n\n  useEffect(() => {\n    if (playlistsError.status === 200) {\n      toast.error(\"Playlist not found. Check the URL.\");\n    } else if (playlistsError.status === 401) {\n      toast.error(\"You must sign in to access this playlist.\");\n    } else if (playlistsError.result) {\n      toast.error(playlistsError.result.error.message);\n    }\n  }, [playlistsError]);\n\n  const fetchMorePlaylistItems = useCallback(() => {\n    dispatch(fetchPlaylistItems(playlistId, playlistItemsToken));\n  }, [playlistId, playlistItemsToken, dispatch]);\n\n  return (\n    <>\n      <PlaylistsView\n        playlistsList={playlistsList}\n        hasMore={false}\n        next={() => {}}\n      />\n      <PlaylistItemsView\n        playlistItemsList={playlistItemsList}\n        hasMore={!!playlistItemsToken}\n        next={fetchMorePlaylistItems}\n      />\n    </>\n  );\n};\n\nexport default PlaylistsPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Flip, ToastContainer } from \"react-toastify\";\n\nimport { initClient, toggleUser } from \"./api/apiHandler\";\nimport HeaderView from \"./components/Header/HeaderView\";\nimport ChannelsPage from \"./containers/Channels/ChannelsPage\";\nimport PlaylistsPage from \"./containers/Playlists/PlaylistsPage\";\n\nconst App = () => {\n  const [ready, setReady] = useState(false);\n  const [user, setUser] = useState({ isAuthorized: false });\n\n  useEffect(() => {\n    initClient(setReady, setUser);\n  }, []);\n\n  return (\n    <>\n      <HeaderView user={user} toggleUser={toggleUser} />\n      <ToastContainer\n        position=\"top-right\"\n        transition={Flip}\n        autoClose={5000}\n        closeOnClick\n        pauseOnFocusLoss\n        pauseOnHover\n      />\n      {ready && (\n        <Switch>\n          <Route path=\"/channel/:channelId\">\n            <ChannelsPage />\n          </Route>\n          <Route path=\"/playlist/:playlistId\">\n            <PlaylistsPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n  persistReducer,\n  persistStore,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport channelsReducer from \"./containers/Channels/channelsSlice\";\nimport playlistsReducer from \"./containers/Playlists/playlistsSlice\";\n\nconst rootReducer = combineReducers({\n  channelsPage: channelsReducer,\n  playlistsPage: playlistsReducer,\n});\n\nconst persistedReducer = persistReducer(\n  {\n    key: \"root\",\n    storage,\n    version: 0.2,\n  },\n  rootReducer\n);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE],\n      },\n    });\n  },\n});\n\nconst persistor = persistStore(store);\n// persistor.purge();\n// persistor.pause();\n\nexport default store;\n\nexport { persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport store, { persistor } from \"./store\";\n\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <BrowserRouter basename=\"/youtube-playlist-manager/#\">\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
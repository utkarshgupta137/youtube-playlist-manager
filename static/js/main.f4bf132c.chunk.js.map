{"version":3,"sources":["api/apiHandler.js","components/Table/Table.jsx","components/Channels/ChannelsView.jsx","components/Playlists/playlistsState.js","components/Channels/channelsState.js","utils/urlUtils.js","components/Header/HeaderView.jsx","components/Header/headerState.js","components/PlaylistItems/PlaylistItemsView.jsx","components/PlaylistItems/playlistItemsState.js","components/Playlists/PlaylistsView.jsx","App.jsx","store.js","index.jsx"],"names":["googleAuth","googleUser","Table","columns","data","hasMore","next","useTable","useGridLayout","getTableProps","headerGroups","rows","prepareRow","dataLength","length","loader","id","className","map","headerGroup","headers","column","getHeaderProps","render","row","cells","cell","getCellProps","ChannelsView","channelsList","useMemo","Header","accessor","cloneDeep","channel","snippet","publishedAt","substring","discoveryDocs","scope","updateAuthStatus","currentUser","get","hasGrantedScopes","listChannels","pageToken","a","gapi","client","youtube","channels","list","part","maxResults","listPlaylists","channelId","playlists","mine","listPlaylistItems","playlistId","playlistItems","listVideos","videos","initialState","playlistsList","playlistsToken","playlistsError","playlistsSlice","createSlice","name","reducers","listPlaylistsSuccess","state","action","payload","items","nextPageToken","listPlaylistsFailed","actions","insertPlaylists","dispatch","getState","then","response","playlistsView","result","concat","catch","fetchPlaylists","prevPageToken","channelsToken","channelsError","channelsSlice","listChannelsSuccess","listChannelsFailed","getURL","url","URL","e","startsWith","isChannelUrl","urlObj","pathname","isPlaylistUrl","searchParams","has","getChannelId","split","slice","getPlaylistId","HeaderView","setUrl","useState","currentUrl","setCurrentUrl","searchDisabled","setSearchDisabled","onSearchButtonClicked","setTimeout","useEffect","type","value","onChange","target","onKeyDown","event","key","placeholder","disabled","onClick","icon","faRedo","faSearch","href","rel","faGithub","headerSlice","updateUrl","PlaylistItemsView","playlistItemsList","playlistItem","position","video","contentDetails","duration","replace","toLowerCase","playlistItemsToken","playlistItemsError","playlistItemsSlice","listPlaylistItemsSuccess","listPlaylistItemsFailed","fetchPlaylistItems","resourceId","videoId","forEach","i","playlistItemsView","PlaylistsView","playlist","App","useDispatch","useSelector","headerView","channelsView","useCallback","newUrl","relatedPlaylists","Object","values","filter","Boolean","reverse","fetchMorePlaylists","fetchMorePlaylistItems","rootReducer","combineReducers","channelsState","headerState","playlistItemsState","playlistsState","persistConfig","version","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","load","init","apiKey","clientId","auth2","getAuthInstance","isSignedIn","listen","Promise","wait","resolve","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4bf132c.chunk.js","sourcesContent":["import { apiKey, clientId } from \"./client_secrets.json\";\n\nconst discoveryDocs = [\n  \"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\",\n];\nconst scope = \"https://www.googleapis.com/auth/youtube.readonly\";\n\nlet googleAuth;\nlet googleUser;\nlet isAuthorized;\n\nfunction getAuthStatus() {\n  return isAuthorized;\n}\n\nfunction updateAuthStatus() {\n  googleUser = googleAuth.currentUser.get();\n  isAuthorized = googleUser.hasGrantedScopes(scope);\n  return isAuthorized;\n}\n\nfunction initClient() {\n  gapi.load(\"client:auth2\", () => {\n    return gapi.client\n      .init({\n        apiKey,\n        clientId,\n        discoveryDocs,\n        scope,\n      })\n      .then(() => {\n        googleAuth = gapi.auth2.getAuthInstance();\n        googleAuth.isSignedIn.listen(updateAuthStatus);\n        return updateAuthStatus();\n      });\n  });\n\n  return new Promise(function wait(resolve) {\n    if (gapi.client && gapi.client.youtube) {\n      return resolve();\n    }\n    return setTimeout(() => {\n      return wait(resolve);\n    }, 100);\n  });\n}\n\nasync function grantAuth() {\n  if (isAuthorized) {\n    return googleUser;\n  }\n  return googleAuth.signIn();\n}\n\nasync function listChannels(id, pageToken) {\n  return gapi.client.youtube.channels.list({\n    part: [\"snippet,contentDetails,statistics\"],\n    maxResults: 50,\n    id,\n    pageToken,\n  });\n}\n\nconst listPlaylists = {\n  channelId: async (channelId, pageToken) => {\n    if (channelId === \"mine\") {\n      return gapi.client.youtube.playlists.list({\n        part: [\"snippet,contentDetails\"],\n        maxResults: 50,\n        mine: true,\n        pageToken,\n      });\n    }\n    return gapi.client.youtube.playlists.list({\n      part: [\"snippet,contentDetails\"],\n      maxResults: 50,\n      channelId,\n      pageToken,\n    });\n  },\n\n  id: async (id, pageToken) => {\n    return gapi.client.youtube.playlists.list({\n      part: [\"snippet,contentDetails\"],\n      maxResults: 50,\n      id,\n      pageToken,\n    });\n  },\n};\n\nasync function listPlaylistItems(playlistId, pageToken) {\n  return gapi.client.youtube.playlistItems.list({\n    part: [\"snippet\"],\n    maxResults: 50,\n    playlistId,\n    pageToken,\n  });\n}\n\nasync function listVideos(id, pageToken) {\n  return gapi.client.youtube.videos.list({\n    part: [\"snippet,contentDetails,statistics\"],\n    maxResults: 50,\n    id,\n    pageToken,\n  });\n}\n\nexport {\n  getAuthStatus,\n  grantAuth,\n  initClient,\n  listChannels,\n  listPlaylists,\n  listPlaylistItems,\n  listVideos,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useGridLayout, useTable } from \"react-table\";\n\nimport \"./Table.css\";\n\nconst Table = ({ columns, data, hasMore, next }) => {\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGridLayout\n  );\n\n  return (\n    <InfiniteScroll\n      dataLength={rows.length}\n      hasMore={hasMore}\n      next={next}\n      loader={<div id=\"loader\">Loading...</div>}\n    >\n      <div {...getTableProps()} className=\"table\">\n        {headerGroups.map((headerGroup) => {\n          return headerGroup.headers.map((column) => {\n            return (\n              <div\n                key={column.id}\n                {...column.getHeaderProps()}\n                className=\"header\"\n              >\n                {column.render(\"Header\")}\n              </div>\n            );\n          });\n        })}\n        {rows.map((row) => {\n          return (\n            prepareRow(row) ||\n            row.cells.map((cell) => {\n              return (\n                <div {...cell.getCellProps()} className=\"cell\">\n                  {cell.render(\"Cell\")}\n                </div>\n              );\n            })\n          );\n        })}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default Table;\n","import cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\n\nimport Table from \"../Table/Table\";\n\nimport \"./ChannelsView.css\";\n\nconst ChannelsView = ({ channelsList, hasMore, next }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        Header: \"Channel title\",\n        accessor: \"snippet.title\",\n      },\n      {\n        Header: \"Created on\",\n        accessor: \"snippet.publishedAt\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"snippet.description\",\n      },\n      // {\n      //   Header: \"Views\",\n      //   accessor: \"statistics.viewCount\",\n      // },\n      // {\n      //   Header: \"Subscribers\",\n      //   accessor: \"statistics.subscriberCount\",\n      // },\n      {\n        Header: \"Videos\",\n        accessor: \"statistics.videoCount\",\n      },\n    ];\n  }, []);\n\n  const data = useMemo(() => {\n    return cloneDeep(channelsList).map((channel) => {\n      channel.snippet.publishedAt = channel.snippet.publishedAt.substring(\n        0,\n        10\n      );\n\n      return channel;\n    });\n  }, [channelsList]);\n\n  return (\n    <div id=\"channels\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nChannelsView.propTypes = {\n  channelsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default ChannelsView;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { listPlaylists } from \"../../api/apiHandler\";\n\nconst initialState = {\n  playlistsList: [],\n  playlistsToken: \"\",\n  playlistsError: {},\n};\n\nconst playlistsSlice = createSlice({\n  name: \"playlists\",\n  initialState,\n  reducers: {\n    listPlaylistsSuccess(state, action) {\n      state.playlistsError = initialState.playlistsError;\n\n      state.playlistsList = action.payload.items;\n      state.playlistsToken = action.payload.nextPageToken;\n    },\n    listPlaylistsFailed(state, action) {\n      state.playlistsError = action.payload;\n    },\n  },\n});\n\nconst { listPlaylistsSuccess, listPlaylistsFailed } = playlistsSlice.actions;\n\nconst insertPlaylists = (playlistId, pageToken) => {\n  return async (dispatch, getState) => {\n    listPlaylists\n      .id(playlistId, pageToken)\n      .then((response) => {\n        const { playlistsList } = getState().playlistsView;\n        response.result.items = response.result.items.concat(playlistsList);\n        dispatch(listPlaylistsSuccess(response.result));\n        return true;\n      })\n      .catch((response) => {\n        dispatch(listPlaylistsFailed(response));\n      });\n  };\n};\n\nconst fetchPlaylists = {\n  channelId: (channelId, pageToken) => {\n    return async (dispatch, getState) => {\n      listPlaylists\n        .channelId(channelId, pageToken)\n        .then((response) => {\n          if (response.result.prevPageToken) {\n            const { playlistsList } = getState().playlistsView;\n            response.result.items = playlistsList.concat(response.result.items);\n          }\n          dispatch(listPlaylistsSuccess(response.result));\n          return true;\n        })\n        .catch((response) => {\n          dispatch(listPlaylistsFailed(response));\n        });\n    };\n  },\n\n  id: (playlistId, pageToken) => {\n    return async (dispatch, getState) => {\n      listPlaylists\n        .id(playlistId, pageToken)\n        .then((response) => {\n          if (response.result.prevPageToken) {\n            const { playlistsList } = getState().playlistsView;\n            response.result.items = playlistsList.concat(response.result.items);\n          }\n          dispatch(listPlaylistsSuccess(response.result));\n          return true;\n        })\n        .catch((response) => {\n          dispatch(listPlaylistsFailed(response));\n        });\n    };\n  },\n};\n\nexport { insertPlaylists, fetchPlaylists };\n\nexport default playlistsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { listChannels } from \"../../api/apiHandler\";\nimport { insertPlaylists } from \"../Playlists/playlistsState\";\n\nconst initialState = {\n  channelsList: [],\n  channelsToken: \"\",\n  channelsError: {},\n};\n\nconst channelsSlice = createSlice({\n  name: \"channels\",\n  initialState,\n  reducers: {\n    listChannelsSuccess(state, action) {\n      state.channelsError = initialState.channelsError;\n\n      state.channelsList = action.payload.items;\n      state.channelsToken = action.payload.nextPageToken;\n    },\n    listChannelsFailed(state, action) {\n      state.channelsError = action.payload;\n    },\n  },\n});\n\nconst { listChannelsSuccess, listChannelsFailed } = channelsSlice.actions;\n\nconst fetchChannels = (channelId, pageToken) => {\n  return async (dispatch, getState) => {\n    listChannels(channelId, pageToken)\n      .then((response) => {\n        const relatedPlaylists = response.result.items.map((channel) => {\n          return Object.values(channel.contentDetails.relatedPlaylists)\n            .filter(Boolean)\n            .reverse();\n        });\n        dispatch(insertPlaylists(relatedPlaylists));\n\n        if (response.result.prevPageToken) {\n          const { channelsList } = getState().channelsView;\n          response.result.items = channelsList.concat(response.result.items);\n        }\n        dispatch(listChannelsSuccess(response.result));\n        return true;\n      })\n      .catch((response) => {\n        dispatch(listChannelsFailed(response));\n      });\n  };\n};\n\nexport { fetchChannels };\n\nexport default channelsSlice.reducer;\n","const getURL = (url) => {\n  try {\n    return new URL(url);\n  } catch (e) {\n    if (!url || url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n      return null;\n    }\n    return getURL(`https://${url}`);\n  }\n};\n\nconst isChannelUrl = (url) => {\n  const urlObj = getURL(url);\n  if (urlObj) {\n    return urlObj.pathname.startsWith(\"/channel/\");\n  }\n  return false;\n};\n\nconst isPlaylistUrl = (url) => {\n  const urlObj = getURL(url);\n  if (urlObj) {\n    return urlObj.searchParams.has(\"list\");\n  }\n  return false;\n};\n\nconst getChannelId = (url) => {\n  const urlObj = getURL(url);\n  if (urlObj) {\n    return urlObj.pathname.split(\"/\").slice(-1)[0];\n  }\n  return null;\n};\n\nconst getPlaylistId = (url) => {\n  const urlObj = getURL(url);\n  if (urlObj) {\n    return urlObj.searchParams.get(\"list\");\n  }\n  return null;\n};\n\nexport { isChannelUrl, isPlaylistUrl, getChannelId, getPlaylistId };\n","import { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faRedo, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { isChannelUrl, isPlaylistUrl } from \"../../utils/urlUtils\";\nimport \"./HeaderView.css\";\n\nconst HeaderView = ({ url, setUrl }) => {\n  const [currentUrl, setCurrentUrl] = useState(url);\n  const [searchDisabled, setSearchDisabled] = useState(true);\n\n  const onCurrentUrlChanged = (e) => {\n    setCurrentUrl(e.target.value);\n  };\n\n  const onSearchButtonClicked = () => {\n    setUrl(currentUrl);\n    setSearchDisabled(true);\n    setTimeout(() => {\n      setSearchDisabled(false);\n    }, 3000);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      onSearchButtonClicked();\n    }\n  };\n\n  useEffect(() => {\n    if (isChannelUrl(currentUrl) || isPlaylistUrl(currentUrl)) {\n      setSearchDisabled(false);\n    } else {\n      setSearchDisabled(true);\n    }\n  }, [url, currentUrl]);\n\n  return (\n    <div id=\"header\">\n      <input\n        id=\"url\"\n        type=\"text\"\n        value={currentUrl}\n        onChange={onCurrentUrlChanged}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Channel or Playlist URL\"\n      />\n      <button\n        id=\"search\"\n        type=\"button\"\n        disabled={searchDisabled}\n        onClick={onSearchButtonClicked}\n      >\n        <FontAwesomeIcon icon={url === currentUrl ? faRedo : faSearch} />\n      </button>\n      <a\n        id=\"github\"\n        href=\"https://github.com/utkarshgupta137/youtube-playlist-manager\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n      >\n        <FontAwesomeIcon icon={faGithub} />\n      </a>\n    </div>\n  );\n};\n\nHeaderView.propTypes = {\n  url: PropTypes.string.isRequired,\n  setUrl: PropTypes.func.isRequired,\n};\n\nexport default HeaderView;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  url: \"https://www.youtube.com/channel/UCHnyfMqiRRG1u-2MsSQLbXA\",\n};\n\nconst headerSlice = createSlice({\n  name: \"header\",\n  initialState,\n  reducers: {\n    updateUrl(state, action) {\n      state.url = action.payload.url;\n    },\n  },\n});\n\nexport const { updateUrl } = headerSlice.actions;\n\nexport default headerSlice.reducer;\n","import cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\n\nimport Table from \"../Table/Table\";\n\nimport \"./PlaylistItemsView.css\";\n\nconst PlaylistItemsView = ({ playlistItemsList, hasMore, next }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        Header: \"Position\",\n        accessor: \"snippet.position\",\n      },\n      {\n        Header: \"Added by\",\n        accessor: \"snippet.channelTitle\",\n      },\n      {\n        Header: \"Added on\",\n        accessor: \"snippet.publishedAt\",\n      },\n      {\n        Header: \"Video title\",\n        accessor: \"video.snippet.title\",\n      },\n      {\n        Header: \"Channel title\",\n        accessor: \"video.snippet.channelTitle\",\n      },\n      {\n        Header: \"Published on\",\n        accessor: \"video.snippet.publishedAt\",\n      },\n      {\n        Header: \"Duration\",\n        accessor: \"video.contentDetails.duration\",\n      },\n      // {\n      //   Header: \"View Count\",\n      //   accessor: \"video.statistics.viewCount\",\n      // },\n      // {\n      //   Header: \"Like Count\",\n      //   accessor: \"video.statistics.likeCount\",\n      // },\n      // {\n      //   Header: \"Dislike Count\",\n      //   accessor: \"video.statistics.dislikeCount\",\n      // },\n      // {\n      //   Header: \"Comment Count\",\n      //   accessor: \"video.statistics.commentCount\",\n      // },\n    ];\n  }, []);\n\n  const data = useMemo(() => {\n    return cloneDeep(playlistItemsList).map((playlistItem) => {\n      playlistItem.snippet.position += 1;\n      playlistItem.snippet.publishedAt = playlistItem.snippet.publishedAt.substring(\n        0,\n        10\n      );\n\n      if (playlistItem.video) {\n        playlistItem.video.snippet.publishedAt = playlistItem.video.snippet.publishedAt.substring(\n          0,\n          10\n        );\n        playlistItem.video.contentDetails.duration = playlistItem.video.contentDetails.duration\n          .replace(\"P\", \"\")\n          .replace(\"T\", \"\")\n          .toLowerCase();\n      }\n\n      return playlistItem;\n    });\n  }, [playlistItemsList]);\n\n  return (\n    <div id=\"playlistItems\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nPlaylistItemsView.propTypes = {\n  playlistItemsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default PlaylistItemsView;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { listPlaylistItems, listVideos } from \"../../api/apiHandler\";\n\nconst initialState = {\n  playlistItemsList: [],\n  playlistItemsToken: \"\",\n  playlistItemsError: {},\n};\n\nconst playlistItemsSlice = createSlice({\n  name: \"playlistItems\",\n  initialState,\n  reducers: {\n    listPlaylistItemsSuccess(state, action) {\n      state.playlistItemsError = initialState.playlistItemsError;\n\n      state.playlistItemsList = action.payload.items;\n      state.playlistItemsToken = action.payload.nextPageToken;\n    },\n    listPlaylistItemsFailed(state, action) {\n      state.playlistItemsError = action.payload;\n    },\n  },\n});\n\nconst {\n  listPlaylistItemsSuccess,\n  listPlaylistItemsFailed,\n} = playlistItemsSlice.actions;\n\nconst fetchVideos = (result) => {\n  return async (dispatch, getState) => {\n    const ids = result.items.map((playlistItem) => {\n      return playlistItem.snippet.resourceId.videoId;\n    });\n\n    listVideos(ids)\n      .then((response) => {\n        result.items.forEach((playlistItem, i) => {\n          playlistItem.video = response.result.items[i];\n        });\n\n        if (result.prevPageToken) {\n          const { playlistItemsList } = getState().playlistItemsView;\n          result.items = playlistItemsList.concat(result.items);\n        }\n        dispatch(listPlaylistItemsSuccess(result));\n        return true;\n      })\n      .catch((response) => {\n        dispatch(listPlaylistItemsFailed(response));\n      });\n  };\n};\n\nconst fetchPlaylistItems = (playlistId, pageToken) => {\n  return async (dispatch) => {\n    listPlaylistItems(playlistId, pageToken)\n      .then((response) => {\n        dispatch(fetchVideos(response.result));\n        return true;\n      })\n      .catch((response) => {\n        dispatch(listPlaylistItemsFailed(response));\n      });\n  };\n};\n\nexport { fetchPlaylistItems, fetchVideos };\n\nexport default playlistItemsSlice.reducer;\n","import cloneDeep from \"lodash/cloneDeep\";\nimport PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\n\nimport Table from \"../Table/Table\";\n\nimport \"./PlaylistsView.css\";\n\nconst PlaylistsView = ({ playlistsList, hasMore, next }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        Header: \"Created by\",\n        accessor: \"snippet.channelTitle\",\n      },\n      {\n        Header: \"Published on\",\n        accessor: \"snippet.publishedAt\",\n      },\n      {\n        Header: \"Playlist title\",\n        accessor: \"snippet.title\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"snippet.description\",\n      },\n      {\n        Header: \"Videos\",\n        accessor: \"contentDetails.itemCount\",\n      },\n    ];\n  }, []);\n\n  const data = useMemo(() => {\n    return cloneDeep(playlistsList).map((playlist) => {\n      playlist.snippet.publishedAt = playlist.snippet.publishedAt.substring(\n        0,\n        10\n      );\n\n      return playlist;\n    });\n  }, [playlistsList]);\n\n  return (\n    <div id=\"playlists\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nPlaylistsView.propTypes = {\n  playlistsList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  next: PropTypes.func.isRequired,\n};\n\nexport default PlaylistsView;\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport ChannelsView from \"./components/Channels/ChannelsView\";\nimport { fetchChannels } from \"./components/Channels/channelsState\";\nimport HeaderView from \"./components/Header/HeaderView\";\nimport { updateUrl } from \"./components/Header/headerState\";\nimport PlaylistItemsView from \"./components/PlaylistItems/PlaylistItemsView\";\nimport { fetchPlaylistItems } from \"./components/PlaylistItems/playlistItemsState\";\nimport PlaylistsView from \"./components/Playlists/PlaylistsView\";\nimport { fetchPlaylists } from \"./components/Playlists/playlistsState\";\nimport {\n  getChannelId,\n  getPlaylistId,\n  isChannelUrl,\n  isPlaylistUrl,\n} from \"./utils/urlUtils\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const { url } = useSelector((state) => {\n    return state.headerView;\n  });\n\n  const { channelsList } = useSelector((state) => {\n    return state.channelsView;\n  });\n\n  const { playlistsList, playlistsToken } = useSelector((state) => {\n    return state.playlistsView;\n  });\n\n  const { playlistItemsList, playlistItemsToken } = useSelector((state) => {\n    return state.playlistItemsView;\n  });\n\n  const setUrl = useCallback(\n    (newUrl) => {\n      if (isChannelUrl(newUrl)) {\n        dispatch(updateUrl({ url: newUrl }));\n        dispatch(fetchChannels(getChannelId(newUrl)));\n        dispatch(fetchPlaylists.channelId(getChannelId(newUrl)));\n      } else if (isPlaylistUrl(newUrl)) {\n        dispatch(updateUrl({ url: newUrl }));\n        dispatch(fetchPlaylists.id(getPlaylistId(newUrl)));\n        dispatch(fetchPlaylistItems(getPlaylistId(newUrl)));\n      }\n    },\n    [dispatch]\n  );\n\n  const fetchMorePlaylists = useCallback(() => {\n    dispatch(fetchPlaylists.channelId(getChannelId(url), playlistsToken));\n  }, [url, playlistsToken, dispatch]);\n\n  const fetchMorePlaylistItems = useCallback(() => {\n    dispatch(fetchPlaylistItems(getPlaylistId(url), playlistItemsToken));\n  }, [url, playlistItemsToken, dispatch]);\n\n  return (\n    <>\n      <HeaderView url={url} setUrl={setUrl} />\n      {channelsList.length > 0 && isChannelUrl(url) && (\n        <ChannelsView\n          channelsList={channelsList}\n          hasMore={false}\n          next={() => {}}\n        />\n      )}\n      {playlistsList.length > 0 && (\n        <PlaylistsView\n          playlistsList={playlistsList}\n          hasMore={!!playlistsToken}\n          next={fetchMorePlaylists}\n        />\n      )}\n      {playlistItemsList.length > 0 && isPlaylistUrl(url) && (\n        <PlaylistItemsView\n          playlistItemsList={playlistItemsList}\n          hasMore={!!playlistItemsToken}\n          next={fetchMorePlaylistItems}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport channelsState from \"./components/Channels/channelsState\";\nimport headerState from \"./components/Header/headerState\";\nimport playlistItemsState from \"./components/PlaylistItems/playlistItemsState\";\nimport playlistsState from \"./components/Playlists/playlistsState\";\n\nconst rootReducer = combineReducers({\n  channelsView: channelsState,\n  headerView: headerState,\n  playlistItemsView: playlistItemsState,\n  playlistsView: playlistsState,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport { initClient } from \"./api/apiHandler\";\nimport store from \"./store\";\n\nimport \"./index.css\";\n\nconst persistor = persistStore(store);\n// persistor.purge();\n// persistor.pause();\n\ninitClient()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <Provider store={store}>\n          <PersistGate persistor={persistor}>\n            <App />\n          </PersistGate>\n        </Provider>\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n    return true;\n  })\n  .catch(() => {\n    return false;\n  });\n"],"sourceRoot":""}
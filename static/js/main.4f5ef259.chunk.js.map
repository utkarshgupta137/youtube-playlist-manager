{"version":3,"sources":["api/apiHandler.js","utils/urlUtils.js","components/Header/User/UserView.jsx","components/Header/HeaderView.jsx","components/Table/Table.jsx","components/Channels/ChannelsView.jsx","components/Playlists/PlaylistsView.jsx","containers/Channels/ChannelsPage.jsx","containers/Channels/channelsHooks.js","components/IndeterminateCheckbox.jsx","components/PlaylistItems/PlaylistItemsView.jsx","hooks/useButtonToast/useButtonToast.jsx","containers/Playlists/PlaylistsPage.jsx","containers/Playlists/playlistsHooks.js","App.jsx","index.jsx"],"names":["googleAuth","googleUser","discoveryDocs","scope","isAuthorized","toggleUser","signOut","signIn","listChannels","id","pageToken","gapi","client","youtube","channels","list","part","maxResults","mine","listPlaylists","channelId","playlists","listPlaylistItems","playlistId","playlistItems","listVideos","videos","maxHeight","deletePlaylistItems","delete","getURLObj","url","startsWith","URL","e","channelRegExp","RegExp","getChannelId","memoize","urlObj","test","pathname","exec","getPlaylistId","searchParams","has","get","UserView","user","userPopout","useMemo","userInfo","src","image","alt","name","email","type","onClick","icon","faSignOutAlt","faSignInAlt","placement","trigger","overlay","faUserCircle","HeaderView","history","useHistory","useState","currentUrl","setCurrentUrl","searchDisabled","setSearchDisabled","onSearchButtonClicked","push","href","rel","target","faGithub","value","onChange","onKeyDown","event","key","placeholder","disabled","faSearch","Table","columns","data","hasMore","next","renderExpanded","setSelectedRowIds","useTable","autoResetGroupBy","autoResetSortBy","autoResetExpanded","autoResetSelectedRows","defaultColumn","disableGroupBy","getRowId","useCallback","row","stateReducer","newState","action","prevState","instance","cols","visibleColumns","gridLayout","columnWidths","map","column","width","aggregations","firstLast","leafValues","values","sort","length","slice","isMultiSortEvent","orderByFn","arr","funcs","dirs","defaultOrderByFn","reverse","useGridLayout","useGroupBy","useSortBy","useExpanded","useRowSelect","hooks","getToggleAllRowsSelectedProps","props","toggleAllRowsSelected","checked","style","cursor","isAllRowsSelected","title","indeterminate","Boolean","initialRows","some","state","selectedRowIds","getTableProps","prepareRow","headerGroups","rows","useEffect","Object","keys","dataLength","loader","className","headerGroup","headers","getHeaderProps","render","canSort","getSortByToggleProps","isSorted","isSortedDesc","faSortDown","faSortUp","faSort","pull","marginTop","canGroupBy","getGroupByToggleProps","faLayerGroup","color","isGrouped","cells","cell","getCellProps","subRows","isAggregated","isPlaceholder","isExpanded","defaultProps","ChannelsView","accessor","Header","Cell","original","substring","parseInt","toLocaleString","PlaylistsView","playlistsPage","aggregate","Aggregated","join","to","snippet","disableSortBy","getToggleRowExpandedProps","faPlayCircle","rotation","dangerouslySetInnerHTML","__html","player","embedHtml","ChannelsPage","useParams","useQuery","a","response","result","items","error","Error","placeholderData","useListChannels","channelsList","useInfiniteQuery","pageParam","playlistsList","playlistsToken","nextPageToken","getNextPageParam","lastPage","select","concat","pages","page","useListPlaylists","hasNextPage","fetchNextPage","options","toastId","status","toast","message","dismiss","channel","i","IndeterminateCheckbox","forwardRef","ref","rest","defaultRef","useRef","resolvedRef","current","PlaylistItemsView","onDeleteButtonClicked","getToggleRowSelectedProps","position","video","toSeconds","parse","hours","Math","floor","minutes","seconds","item","includes","faTrash","useButtonToast","onClose","isRepeatToast","isDismissOnClick","isDismissOnRepeat","showButtonToast","text","buttonText","dark","closeOnClick","PlaylistsPage","ids","playlistItem","resourceId","videoId","res","forEach","playlistItemsList","playlistItemsToken","useListPlaylistItems","mutate","timeoutId","queryClient","useQueryClient","queryKey","useMutation","playlistItemIds","Promise","all","playlistItemId","onMutate","variables","clearTimeout","cancelQueries","previousState","getQueryData","setQueryData","oldData","filter","onError","err","onSuccess","setTimeout","invalidateQueries","useDeletePlaylistItems","removedIds","setRemovedIds","playlist","App","ready","setReady","setUser","load","init","apiKey","clientId","auth2","getAuthInstance","updateAuthStatus","currentUser","hasGrantedScopes","profile","getBasicProfile","getName","getEmail","getImageUrl","isSignedIn","listen","initClient","transition","Flip","autoClose","pauseOnFocusLoss","pauseOnHover","path","QueryClient","setDefaultOptions","queries","staleTime","cacheTime","Infinity","refetchOnReconnect","refetchOnWindowFocus","retry","ReactDOM","StrictMode","basename","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4f5ef259.chunk.js","sourcesContent":["import { apiKey, clientId } from \"./client_secrets.json\";\n\nconst discoveryDocs = [\n  \"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\",\n];\nconst scope = \"https://www.googleapis.com/auth/youtube\";\n\nlet googleAuth;\nlet googleUser;\nlet isAuthorized = false;\n\nconst toggleUser = () => {\n  if (isAuthorized) {\n    googleAuth.signOut();\n  } else {\n    googleAuth.signIn();\n  }\n};\n\nconst initClient = (setReady, setUser) => {\n  gapi.load(\"client:auth2\", async () => {\n    await gapi.client.init({\n      apiKey,\n      clientId,\n      discoveryDocs,\n      scope,\n    });\n    setReady(true);\n\n    googleAuth = gapi.auth2.getAuthInstance();\n    const updateAuthStatus = () => {\n      googleUser = googleAuth.currentUser.get();\n      isAuthorized = googleUser.hasGrantedScopes(scope);\n\n      const user = { isAuthorized };\n      if (isAuthorized) {\n        const profile = googleUser.getBasicProfile();\n        user.name = profile.getName();\n        user.email = profile.getEmail();\n        user.image = profile.getImageUrl();\n      }\n      setUser(user);\n    };\n\n    googleAuth.isSignedIn.listen(updateAuthStatus);\n    updateAuthStatus();\n  });\n};\n\nconst listChannels = {\n  channelId: (id, pageToken) => {\n    if (id === \"mine\") {\n      return gapi.client.youtube.channels.list({\n        part: [\"snippet,statistics\"],\n        maxResults: 50,\n        mine: true,\n        pageToken,\n      });\n    }\n\n    return gapi.client.youtube.channels.list({\n      part: [\"snippet,statistics\"],\n      maxResults: 50,\n      id,\n      pageToken,\n    });\n  },\n};\n\nconst listPlaylists = {\n  channelId: (channelId, pageToken) => {\n    if (channelId === \"mine\") {\n      return gapi.client.youtube.playlists.list({\n        part: [\"snippet,contentDetails,player\"],\n        maxResults: 50,\n        mine: true,\n        pageToken,\n      });\n    }\n\n    return gapi.client.youtube.playlists.list({\n      part: [\"snippet,contentDetails,player\"],\n      maxResults: 50,\n      channelId,\n      pageToken,\n    });\n  },\n\n  playlistId: (id, pageToken) => {\n    return gapi.client.youtube.playlists.list({\n      part: [\"snippet,contentDetails,player\"],\n      maxResults: 50,\n      id,\n      pageToken,\n    });\n  },\n};\n\nconst listPlaylistItems = {\n  playlistId: (playlistId, pageToken) => {\n    return gapi.client.youtube.playlistItems.list({\n      part: [\"snippet\"],\n      maxResults: 50,\n      playlistId,\n      pageToken,\n    });\n  },\n};\n\nconst listVideos = {\n  videoId: (id, pageToken) => {\n    return gapi.client.youtube.videos.list({\n      part: [\"snippet,contentDetails,statistics,player\"],\n      maxResults: 50,\n      id,\n      pageToken,\n      maxHeight: 360,\n    });\n  },\n};\n\nconst deletePlaylistItems = {\n  playlistItemId: (id) => {\n    return gapi.client.youtube.playlistItems.delete({\n      id,\n    });\n  },\n};\n\nexport {\n  toggleUser,\n  initClient,\n  listChannels,\n  listPlaylists,\n  listPlaylistItems,\n  listVideos,\n  deletePlaylistItems,\n};\n","import memoize from \"lodash/memoize\";\n\nconst getURLObj = (url) => {\n  if (url) {\n    try {\n      if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n        return new URL(url);\n      }\n      return new URL(`https://${url}`);\n    } catch (e) {}\n  }\n  return null;\n};\n\nconst channelRegExp = new RegExp(/^\\/channel\\/([\\w-]+)$/);\nconst getChannelId = memoize((url) => {\n  const urlObj = getURLObj(url);\n  if (channelRegExp.test(urlObj?.pathname)) {\n    return channelRegExp.exec(urlObj.pathname)[1];\n  }\n  return null;\n});\n\nconst getPlaylistId = memoize((url) => {\n  const urlObj = getURLObj(url);\n  if (urlObj?.searchParams.has(\"list\")) {\n    return urlObj.searchParams.get(\"list\");\n  }\n  return null;\n});\n\nconst getChannelUrl = (id) => {\n  return `https://youtube.com/channel/${id}`;\n};\n\nconst getPlaylistUrl = (id) => {\n  return `hhttps://www.youtube.com/playlist?list=${id}`;\n};\n\nconst getVideoUrl = (id, playlistId, position) => {\n  return `https://www.youtube.com/watch?v=${id}&list=${playlistId}&index=${position}`;\n};\n\nexport {\n  getChannelId,\n  getChannelUrl,\n  getPlaylistId,\n  getPlaylistUrl,\n  getVideoUrl,\n};\n","import {\n  faSignInAlt,\n  faSignOutAlt,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport Tooltip from \"rc-tooltip\";\nimport React, { useMemo } from \"react\";\n\nimport \"./UserView.css\";\n\nconst UserView = ({ user, toggleUser }) => {\n  const userPopout = useMemo(() => {\n    let userInfo;\n    if (user.isAuthorized) {\n      userInfo = (\n        <>\n          <img id=\"userImage\" src={user.image} alt=\"\" />\n          <span id=\"userName\">{user.name}</span>\n          <span id=\"userEmail\">{user.email}</span>\n        </>\n      );\n    } else {\n      userInfo = (\n        <>\n          <span id=\"signInPrompt\">\n            Sign in to access your\n            <br />\n            channel & private playlists.\n          </span>\n        </>\n      );\n    }\n\n    return (\n      <div id=\"userPopout\">\n        {userInfo}\n        <button id=\"toggleUser\" type=\"button\" onClick={toggleUser}>\n          <FontAwesomeIcon\n            icon={user.isAuthorized ? faSignOutAlt : faSignInAlt}\n          />\n        </button>\n      </div>\n    );\n  }, [user, toggleUser]);\n\n  return (\n    <Tooltip placement=\"left\" trigger=\"click\" overlay={userPopout}>\n      <button id=\"user\" type=\"button\">\n        <FontAwesomeIcon icon={faUserCircle} />\n      </button>\n    </Tooltip>\n  );\n};\n\nUserView.propTypes = {\n  user: PropTypes.shape({\n    isAuthorized: PropTypes.bool.isRequired,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    image: PropTypes.string,\n  }).isRequired,\n  toggleUser: PropTypes.func.isRequired,\n};\n\nexport default UserView;\n","import { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getChannelId, getPlaylistId } from \"../../utils/urlUtils\";\n\nimport UserView from \"./User/UserView\";\n\nimport \"./HeaderView.css\";\n\nconst HeaderView = ({ user, toggleUser }) => {\n  const history = useHistory();\n\n  const [currentUrl, setCurrentUrl] = useState(\"youtu.be/channel/mine\");\n  const [searchDisabled, setSearchDisabled] = useState(false);\n\n  const onCurrentUrlChanged = (e) => {\n    setCurrentUrl(e.target.value);\n    if (getChannelId(e.target.value) || getPlaylistId(e.target.value)) {\n      setSearchDisabled(false);\n    } else {\n      setSearchDisabled(true);\n    }\n  };\n\n  const onSearchButtonClicked = () => {\n    if (getChannelId(currentUrl)) {\n      history.push(`/channel/${getChannelId(currentUrl)}`);\n    } else if (getPlaylistId(currentUrl)) {\n      history.push(`/playlist/${getPlaylistId(currentUrl)}`);\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      onSearchButtonClicked();\n    }\n  };\n\n  return (\n    <div id=\"headerView\">\n      <a\n        id=\"github\"\n        href=\"https://github.com/utkarshgupta137/youtube-playlist-manager\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n      >\n        <FontAwesomeIcon icon={faGithub} />\n      </a>\n      <input\n        id=\"url\"\n        type=\"text\"\n        value={currentUrl}\n        onChange={onCurrentUrlChanged}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Channel or Playlist URL\"\n      />\n      <button\n        id=\"search\"\n        type=\"button\"\n        disabled={searchDisabled}\n        onClick={onSearchButtonClicked}\n      >\n        <FontAwesomeIcon icon={faSearch} />\n      </button>\n      <UserView user={user} toggleUser={toggleUser} />\n    </div>\n  );\n};\n\nHeaderView.propTypes = {\n  user: PropTypes.shape({\n    isAuthorized: PropTypes.bool.isRequired,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    image: PropTypes.string,\n  }).isRequired,\n  toggleUser: PropTypes.func.isRequired,\n};\n\nexport default HeaderView;\n","import {\n  faLayerGroup,\n  faSort,\n  faSortDown,\n  faSortUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {\n  useExpanded,\n  useRowSelect,\n  useGridLayout,\n  useGroupBy,\n  useSortBy,\n  useTable,\n  defaultOrderByFn,\n} from \"react-table\";\n\nimport \"./Table.css\";\n\nconst Table = ({\n  columns,\n  data,\n  hasMore,\n  next,\n  renderExpanded,\n  setSelectedRowIds,\n}) => {\n  const {\n    getTableProps,\n    prepareRow,\n    headerGroups,\n    rows,\n    state: { selectedRowIds },\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetGroupBy: false,\n      autoResetSortBy: false,\n      autoResetExpanded: false,\n      autoResetSelectedRows: false,\n      defaultColumn: {\n        disableGroupBy: true,\n      },\n      getRowId: useCallback((row) => {\n        return row.id;\n      }, []),\n      stateReducer: useCallback((newState, action, prevState, instance) => {\n        const cols = instance.visibleColumns || instance.columns;\n        return {\n          ...newState,\n          gridLayout: {\n            columnWidths: cols.map((column) => {\n              return column.width || \"auto\";\n            }),\n          },\n        };\n      }, []),\n      aggregations: useMemo(() => {\n        return {\n          firstLast: (leafValues) => {\n            const values = [...leafValues].sort();\n            if (values.length === 1) {\n              return values[0];\n            }\n            return `${values[0]}..${values.slice(-1)}`;\n          },\n        };\n      }, []),\n      isMultiSortEvent: useCallback(() => {\n        return true;\n      }, []),\n      orderByFn: useCallback((arr, funcs, dirs) => {\n        return defaultOrderByFn(arr, funcs.reverse(), dirs.reverse());\n      }, []),\n    },\n    useGridLayout,\n    useGroupBy,\n    useSortBy,\n    useExpanded,\n    useRowSelect,\n    useCallback((hooks) => {\n      hooks.getToggleAllRowsSelectedProps.push((props, { instance }) => {\n        return [\n          props,\n          {\n            onChange: (e) => {\n              instance.toggleAllRowsSelected(e.target.checked);\n            },\n            style: {\n              cursor: \"pointer\",\n            },\n            checked: instance.isAllRowsSelected,\n            title: \"Toggle All Rows Selected\",\n            indeterminate: Boolean(\n              !instance.isAllRowsSelected &&\n                instance.initialRows.some(({ id }) => {\n                  return instance.state.selectedRowIds[id];\n                })\n            ),\n          },\n        ];\n      });\n    }, [])\n  );\n\n  useEffect(() => {\n    setSelectedRowIds(Object.keys(selectedRowIds));\n  }, [setSelectedRowIds, selectedRowIds]);\n\n  return (\n    <InfiniteScroll\n      dataLength={rows.length}\n      hasMore={hasMore}\n      next={next}\n      loader={<div id=\"loader\">Loading...</div>}\n    >\n      <div {...getTableProps()} className=\"table\">\n        {headerGroups.map((headerGroup) => {\n          return headerGroup.headers.map((column) => {\n            return (\n              <div {...column.getHeaderProps()} className=\"header\">\n                {column.render(\"Header\")}\n                {column.canSort ? (\n                  <span {...column.getSortByToggleProps()}>\n                    <FontAwesomeIcon\n                      icon={\n                        column.isSorted\n                          ? column.isSortedDesc\n                            ? faSortDown\n                            : faSortUp\n                          : faSort\n                      }\n                      pull=\"right\"\n                      style={{ marginTop: \"0.1rem\" }}\n                    />\n                  </span>\n                ) : null}\n                {column.canGroupBy ? (\n                  <span {...column.getGroupByToggleProps()}>\n                    <FontAwesomeIcon\n                      icon={faLayerGroup}\n                      color={column.isGrouped ? \"#ff0000\" : null}\n                      pull=\"right\"\n                      style={{ marginTop: \"0.1rem\" }}\n                    />\n                  </span>\n                ) : null}\n              </div>\n            );\n          });\n        })}\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <>\n              {row.cells.map((cell) => {\n                return (\n                  <div {...cell.getCellProps()} className=\"cell\">\n                    {cell.isGrouped ? (\n                      <>\n                        {cell.render(\"Cell\")} ({row.subRows.length})\n                      </>\n                    ) : cell.isAggregated ? (\n                      cell.render(\"Aggregated\")\n                    ) : cell.isPlaceholder ? null : (\n                      cell.render(\"Cell\")\n                    )}\n                  </div>\n                );\n              })}\n              {row.isExpanded ? renderExpanded(row) : null}\n            </>\n          );\n        })}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool,\n  next: PropTypes.func,\n  renderExpanded: PropTypes.func,\n  setSelectedRowIds: PropTypes.func,\n};\n\nTable.defaultProps = {\n  hasMore: false,\n  next: () => {},\n  renderExpanded: () => {},\n  setSelectedRowIds: () => {},\n};\n\nexport default Table;\n","import PropTypes from \"prop-types\";\nimport React, { useMemo } from \"react\";\n\nimport { getChannelUrl } from \"../../utils/urlUtils\";\nimport Table from \"../Table/Table\";\n\nimport \"./ChannelsView.css\";\n\nconst ChannelsView = ({ data, hasMore, next }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        accessor: \"snippet.title\",\n        width: \"minmax(14rem, auto)\",\n        Header: \"Channel title\",\n        Cell: (e) => {\n          return (\n            <a\n              href={getChannelUrl(e.row.original.id)}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              {e.value}\n            </a>\n          );\n        },\n      },\n      {\n        accessor: \"snippet.publishedAt\",\n        width: \"minmax(8rem, min-content)\",\n        Header: \"Created on\",\n        Cell: (e) => {\n          return e.value.substring(0, 10);\n        },\n      },\n      {\n        accessor: \"snippet.description\",\n        width: \"minmax(28rem, auto)\",\n        Header: \"Description\",\n      },\n      {\n        accessor: \"statistics.viewCount\",\n        width: \"minmax(8rem, min-content)\",\n        Header: \"Views\",\n        Cell: (e) => {\n          return parseInt(e.value, 10).toLocaleString();\n        },\n      },\n      {\n        accessor: \"statistics.subscriberCount\",\n        width: \"minmax(8rem, min-content)\",\n        Header: \"Subscribers\",\n        Cell: (e) => {\n          return parseInt(e.value, 10).toLocaleString();\n        },\n      },\n      {\n        accessor: \"statistics.videoCount\",\n        width: \"6rem\",\n        Header: \"Videos\",\n      },\n    ];\n  }, []);\n\n  return (\n    <div id=\"channelsView\">\n      <Table columns={columns} data={data} hasMore={hasMore} next={next} />\n    </div>\n  );\n};\n\nChannelsView.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool,\n  next: PropTypes.func,\n};\n\nChannelsView.defaultProps = {\n  hasMore: false,\n  next: () => {},\n};\n\nexport default ChannelsView;\n","import { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getPlaylistUrl } from \"../../utils/urlUtils\";\nimport Table from \"../Table/Table\";\n\nimport \"./PlaylistsView.css\";\n\nconst PlaylistsView = ({ data, hasMore, next, playlistsPage }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        accessor: \"snippet.channelTitle\",\n        aggregate: \"unique\",\n        disableGroupBy: false,\n        width: \"minmax(14rem, auto)\",\n        Header: \"Created by\",\n        Aggregated: (e) => {\n          return e.value.join(\", \");\n        },\n        Cell: (e) => {\n          const row = e.row.original || e.row.subRows[0].original;\n          return row && playlistsPage ? (\n            <Link to={`/channel/${row.snippet.channelId}`}>{e.value}</Link>\n          ) : (\n            e.value\n          );\n        },\n      },\n      {\n        accessor: \"snippet.publishedAt\",\n        aggregate: \"firstLast\",\n        width: \"minmax(8rem, min-content)\",\n        Header: \"Created on\",\n        Cell: (e) => {\n          return e.value.substring(0, 10);\n        },\n      },\n      {\n        accessor: \"snippet.title\",\n        width: \"minmax(24rem, auto)\",\n        Header: \"Playlist title\",\n        Cell: (e) => {\n          const row = e.row.original;\n          return row ? (\n            playlistsPage ? (\n              <a\n                href={getPlaylistUrl(e.row.original.id)}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                {e.value}\n              </a>\n            ) : (\n              <Link to={`/playlist/${e.row.original.id}`}>{e.value}</Link>\n            )\n          ) : (\n            e.value\n          );\n        },\n      },\n      {\n        accessor: \"snippet.description\",\n        width: \"minmax(18rem, auto)\",\n        Header: \"Description\",\n      },\n      {\n        accessor: \"contentDetails.itemCount\",\n        aggregate: \"sum\",\n        width: \"6rem\",\n        Header: \"Videos\",\n      },\n      {\n        id: \"expander\",\n        disableSortBy: true,\n        width: \"2rem\",\n        Cell: (e) => {\n          return (\n            <span {...e.row.getToggleRowExpandedProps()}>\n              <FontAwesomeIcon\n                icon={faPlayCircle}\n                rotation={e.row.isExpanded ? 270 : 0}\n              />\n            </span>\n          );\n        },\n      },\n    ];\n  }, [playlistsPage]);\n\n  const renderExpanded = useCallback((row) => {\n    return (\n      <div\n        className=\"row\"\n        dangerouslySetInnerHTML={{\n          __html: row.original.player.embedHtml,\n        }}\n      />\n    );\n  }, []);\n\n  return (\n    <div id=\"playlistsView\">\n      <Table\n        columns={columns}\n        data={data}\n        hasMore={hasMore}\n        next={next}\n        renderExpanded={renderExpanded}\n      />\n    </div>\n  );\n};\n\nPlaylistsView.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool,\n  next: PropTypes.func,\n  playlistsPage: PropTypes.bool,\n};\n\nPlaylistsView.defaultProps = {\n  hasMore: false,\n  next: () => {},\n  playlistsPage: true,\n};\n\nexport default PlaylistsView;\n","import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport ChannelsView from \"../../components/Channels/ChannelsView\";\nimport PlaylistsView from \"../../components/Playlists/PlaylistsView\";\n\nimport { useListChannels, useListPlaylists } from \"./channelsHooks\";\n\nconst ChannelsPage = () => {\n  const { channelId } = useParams();\n  const { data: channelsList, error } = useListChannels(channelId);\n  const {\n    data: playlistsList,\n    hasNextPage: hasMore,\n    fetchNextPage: next,\n  } = useListPlaylists(channelId);\n\n  useEffect(() => {\n    const options = { toastId: \"ChannelsPage\" };\n    if (error?.response.status === 200) {\n      toast.error(\"Channel not found. Check the URL.\", options);\n    } else if (error?.response.status === 401) {\n      toast.error(\"You must sign in to access this channel.\", options);\n    } else if (error?.response.result) {\n      toast.error(error.response.result.error.message, options);\n    } else {\n      toast.dismiss();\n    }\n  }, [error]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {channelsList\n            ? channelsList.map((channel, i) => {\n                return `${i === 0 ? \"YPM | \" : \"\"}${channel.snippet.title}${\n                  i < channelsList.length - 1 ? \" | \" : \"\"\n                }`;\n              })\n            : \"YouTube Playlist Manager\"}\n        </title>\n      </Helmet>\n      <ChannelsView data={channelsList || []} />\n      <PlaylistsView\n        data={playlistsList}\n        hasMore={hasMore}\n        next={next}\n        playlistsPage={false}\n      />\n    </>\n  );\n};\n\nexport default ChannelsPage;\n","import { useInfiniteQuery, useQuery } from \"react-query\";\n\nimport { listChannels, listPlaylists } from \"../../api/apiHandler\";\n\nconst useListChannels = (channelId) => {\n  return useQuery(\n    [\"channels\", channelId],\n    async () => {\n      let response;\n      try {\n        response = await listChannels.channelId(channelId);\n\n        if (response.result.items?.length > 0) {\n          return response.result.items;\n        }\n      } catch (e) {\n        response = e;\n      }\n      const error = new Error();\n      error.response = response;\n      throw error;\n    },\n    {\n      placeholderData: [],\n    }\n  );\n};\n\nconst useListPlaylists = (channelId) => {\n  return useInfiniteQuery(\n    [\"playlists\", channelId],\n    async ({ pageParam: pageToken }) => {\n      try {\n        const response = await listPlaylists.channelId(channelId, pageToken);\n\n        return {\n          playlistsList: response.result.items,\n          playlistsToken: response.result.nextPageToken,\n        };\n      } catch (e) {}\n      return {};\n    },\n    {\n      placeholderData: [],\n      getNextPageParam: (lastPage) => {\n        return lastPage.playlistsToken;\n      },\n      select: (data) => {\n        return [].concat(\n          ...data.pages.map((page) => {\n            return page.playlistsList || [];\n          })\n        );\n      },\n    }\n  );\n};\n\nexport { useListChannels, useListPlaylists };\n","import PropTypes from \"prop-types\";\nimport React, { forwardRef, useEffect, useRef } from \"react\";\n\nconst IndeterminateCheckbox = forwardRef(({ indeterminate, ...rest }, ref) => {\n  const defaultRef = useRef();\n  const resolvedRef = ref || defaultRef;\n\n  useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n\n  return <input type=\"checkbox\" ref={resolvedRef} {...rest} />;\n});\n\nIndeterminateCheckbox.propTypes = {\n  indeterminate: PropTypes.bool.isRequired,\n};\n\nexport default IndeterminateCheckbox;\n","import { faPlayCircle, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { parse, toSeconds } from \"iso8601-duration\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getVideoUrl } from \"../../utils/urlUtils\";\nimport IndeterminateCheckbox from \"../IndeterminateCheckbox\";\nimport Table from \"../Table/Table\";\n\nimport \"./PlaylistItemsView.css\";\n\nconst PlaylistItemsView = ({ data, hasMore, next, onDeleteButtonClicked }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        id: \"selector\",\n        width: \"2rem\",\n        Header: (instance) => {\n          return (\n            <IndeterminateCheckbox\n              {...instance.getToggleAllRowsSelectedProps()}\n            />\n          );\n        },\n        Cell: (e) => {\n          return (\n            <IndeterminateCheckbox {...e.row.getToggleRowSelectedProps()} />\n          );\n        },\n      },\n      {\n        accessor: \"snippet.position\",\n        aggregate: \"minMax\",\n        width: \"4rem\",\n        Header: \"#\",\n        Cell: (e) => {\n          return e.value + 1;\n        },\n      },\n      {\n        accessor: \"snippet.channelTitle\",\n        aggregate: \"unique\",\n        disableGroupBy: false,\n        width: \"minmax(8rem, auto)\",\n        Header: \"Added by\",\n        Aggregated: (e) => {\n          return e.value.join(\", \");\n        },\n      },\n      {\n        accessor: \"snippet.publishedAt\",\n        aggregate: \"firstLast\",\n        width: \"minmax(8rem, min-content)\",\n        Header: \"Added on\",\n        Cell: (e) => {\n          return e.value.substring(0, 10);\n        },\n      },\n      {\n        accessor: \"video.snippet.title\",\n        width: \"minmax(24rem, auto)\",\n        Header: \"Video title\",\n        Cell: (e) => {\n          const row = e.row.original;\n          return row ? (\n            <a\n              href={getVideoUrl(\n                row.video.id,\n                row.snippet.playlistId,\n                row.snippet.position\n              )}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              {e.value}\n            </a>\n          ) : (\n            e.value\n          );\n        },\n      },\n      {\n        accessor: \"video.snippet.channelTitle\",\n        aggregate: \"unique\",\n        disableGroupBy: false,\n        width: \"minmax(10rem, auto)\",\n        Header: \"Created by\",\n        Cell: (e) => {\n          const row = e.row.original || e.row.subRows[0].original;\n          return row ? (\n            <Link to={`/channel/${row.video.snippet.channelId}`}>\n              {e.value}\n            </Link>\n          ) : (\n            e.value\n          );\n        },\n        Aggregated: (e) => {\n          return e.value.join(\", \");\n        },\n      },\n      {\n        accessor: \"video.snippet.publishedAt\",\n        aggregate: \"firstLast\",\n        width: \"minmax(8rem, min-content)\",\n        Header: \"Created on\",\n        Cell: (e) => {\n          return e.value.substring(0, 10);\n        },\n      },\n      {\n        accessor: \"video.contentDetails.duration\",\n        aggregate: \"sum\",\n        width: \"6rem\",\n        Header: \"Length\",\n        Cell: (e) => {\n          if (e.value) {\n            const value = toSeconds(parse(e.value));\n            const hours = Math.floor(value / 3600);\n            let minutes = Math.floor(value / 60) % 60;\n            if (minutes < 10) {\n              minutes = `0${minutes}`;\n            }\n            let seconds = value % 60;\n            if (seconds < 10) {\n              seconds = `0${seconds}`;\n            }\n\n            return hours > 0\n              ? `${hours}:${minutes}:${seconds}`\n              : `${minutes}:${seconds}`;\n          }\n          return null;\n        },\n      },\n      // {\n      //   Header: \"View Count\",\n      //   accessor: \"video.statistics.viewCount\",\n      // },\n      // {\n      //   Header: \"Like Count\",\n      //   accessor: \"video.statistics.likeCount\",\n      // },\n      // {\n      //   Header: \"Dislike Count\",\n      //   accessor: \"video.statistics.dislikeCount\",\n      // },\n      // {\n      //   Header: \"Comment Count\",\n      //   accessor: \"video.statistics.commentCount\",\n      // },\n      {\n        id: \"expander\",\n        disableSortBy: true,\n        width: \"2rem\",\n        Cell: (e) => {\n          return (\n            <span {...e.row.getToggleRowExpandedProps()}>\n              <FontAwesomeIcon\n                icon={faPlayCircle}\n                rotation={e.row.isExpanded ? 270 : 0}\n              />\n            </span>\n          );\n        },\n      },\n    ];\n  }, []);\n\n  const renderExpanded = useCallback((row) => {\n    return row.original ? (\n      <div\n        className=\"row\"\n        dangerouslySetInnerHTML={{\n          __html: row.original.video.player.embedHtml,\n        }}\n      />\n    ) : null;\n  }, []);\n\n  const [selectedRowIds, setSelectedRowIds] = useState([]);\n\n  return (\n    <div id=\"playlistItemsView\">\n      <button\n        id=\"trash\"\n        type=\"button\"\n        disabled={\n          !data.some((item) => {\n            return selectedRowIds.includes(item.id);\n          })\n        }\n        onClick={() => {\n          onDeleteButtonClicked(selectedRowIds);\n        }}\n      >\n        <FontAwesomeIcon icon={faTrash} />\n      </button>\n      <Table\n        columns={columns}\n        data={data}\n        hasMore={hasMore}\n        next={next}\n        renderExpanded={renderExpanded}\n        setSelectedRowIds={setSelectedRowIds}\n      />\n    </div>\n  );\n};\n\nPlaylistItemsView.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  hasMore: PropTypes.bool,\n  next: PropTypes.func,\n  onDeleteButtonClicked: PropTypes.func.isRequired,\n};\n\nPlaylistItemsView.defaultProps = {\n  hasMore: false,\n  next: () => {},\n};\n\nexport default PlaylistItemsView;\n","import React, { useCallback, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport \"./useButtonToast.css\";\n\nconst useButtonToast = (onClick, onClose) => {\n  const toastId = useRef(null);\n  const isRepeatToast = useRef(false);\n  const isDismissOnClick = useRef(false);\n  const isDismissOnRepeat = useRef(false);\n  return {\n    showButtonToast: useCallback(\n      (text, buttonText) => {\n        if (isRepeatToast.current) {\n          isDismissOnRepeat.current = true;\n          toast.dismiss(toastId.current);\n        } else {\n          isRepeatToast.current = true;\n        }\n        toastId.current = toast.dark(\n          () => {\n            return (\n              <div id=\"buttonToastView\">\n                {text}\n                <button\n                  id=\"toast\"\n                  type=\"button\"\n                  onClick={() => {\n                    isDismissOnClick.current = true;\n                    toast.dismiss(toastId.current);\n                    onClick();\n                  }}\n                >\n                  {buttonText}\n                </button>\n              </div>\n            );\n          },\n          {\n            className: \"buttonToast\",\n            closeOnClick: false,\n            onClose: () => {\n              if (isDismissOnRepeat.current) {\n                isDismissOnRepeat.current = false;\n              } else if (isDismissOnClick.current) {\n                isRepeatToast.current = false;\n                isDismissOnClick.current = false;\n              } else {\n                isRepeatToast.current = false;\n                onClose();\n              }\n            },\n          }\n        );\n      },\n      [onClick, onClose]\n    ),\n  };\n};\n\nexport default useButtonToast;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport PlaylistItemsView from \"../../components/PlaylistItems/PlaylistItemsView\";\nimport PlaylistsView from \"../../components/Playlists/PlaylistsView\";\nimport useButtonToast from \"../../hooks/useButtonToast/useButtonToast\";\n\nimport {\n  useDeletePlaylistItems,\n  useListPlaylistItems,\n  useListPlaylists,\n} from \"./playlistsHooks\";\n\nconst PlaylistsPage = () => {\n  const { playlistId } = useParams();\n  const { data: playlistsList, error } = useListPlaylists(playlistId);\n  const {\n    data: playlistItemsList,\n    hasNextPage: hasMore,\n    fetchNextPage: next,\n  } = useListPlaylistItems(playlistId);\n  const { mutate } = useDeletePlaylistItems(playlistId);\n\n  useEffect(() => {\n    const options = { toastId: \"PlaylistsPage\" };\n    if (error?.response.status === 200) {\n      toast.error(\"Playlist not found. Check the URL.\", options);\n    } else if (error?.response.status === 401) {\n      toast.error(\"You must sign in to access this playlist.\", options);\n    } else if (error?.response.result) {\n      toast.error(error.response.result.error.message, options);\n    } else {\n      toast.dismiss();\n    }\n  }, [error]);\n\n  const [removedIds, setRemovedIds] = useState([]);\n\n  const { showButtonToast } = useButtonToast(\n    useCallback(() => {\n      setRemovedIds([]);\n    }, []),\n    useCallback(() => {\n      mutate(removedIds, {\n        onError: (err) => {\n          const options = { toastId: \"PlaylistsPage\" };\n          if (err.status === 401) {\n            toast.error(\"You must sign in to modify this playlist.\", options);\n          } else if (err.result) {\n            toast.error(err.result.error.message, options);\n          }\n        },\n      });\n      setRemovedIds([]);\n    }, [mutate, removedIds])\n  );\n\n  useEffect(() => {\n    if (removedIds.length > 0) {\n      showButtonToast(\n        removedIds.length === 1\n          ? `Removed 1 video.`\n          : `Removed ${removedIds.length} videos.`,\n        \"UNDO\"\n      );\n    }\n  }, [showButtonToast, removedIds]);\n\n  const data = useMemo(() => {\n    return playlistItemsList\n      .filter((playlistItem) => {\n        return !removedIds.includes(playlistItem.id);\n      })\n      .map((playlistItem, i) => {\n        playlistItem.snippet.position = i;\n        return playlistItem;\n      });\n  }, [playlistItemsList, removedIds]);\n\n  const onDeleteButtonClicked = useCallback(\n    (items) => {\n      setRemovedIds(\n        playlistItemsList\n          .filter((playlistItem) => {\n            return items.includes(playlistItem.id);\n          })\n          .map((playlistItem) => {\n            return playlistItem.id;\n          })\n      );\n    },\n    [playlistItemsList]\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {playlistsList\n            ? playlistsList.map((playlist, i) => {\n                return `${i === 0 ? \"YPM | \" : \"\"}${playlist.snippet.title}${\n                  i < playlistsList.length - 1 ? \" | \" : \"\"\n                }`;\n              })\n            : \"YouTube Playlist Manager\"}\n        </title>\n      </Helmet>\n      <PlaylistsView data={playlistsList || []} />\n      <PlaylistItemsView\n        data={data}\n        hasMore={hasMore}\n        next={next}\n        onDeleteButtonClicked={onDeleteButtonClicked}\n      />\n    </>\n  );\n};\n\nexport default PlaylistsPage;\n","import { useRef } from \"react\";\nimport {\n  useInfiniteQuery,\n  useMutation,\n  useQuery,\n  useQueryClient,\n} from \"react-query\";\n\nimport {\n  listPlaylistItems,\n  listPlaylists,\n  listVideos,\n  deletePlaylistItems,\n} from \"../../api/apiHandler\";\n\nconst useListPlaylists = (playlistId) => {\n  return useQuery(\n    [\"playlists\", playlistId],\n    async () => {\n      let response;\n      try {\n        response = await listPlaylists.playlistId(playlistId);\n\n        if (response.result.items?.length > 0) {\n          return response.result.items;\n        }\n      } catch (e) {\n        response = e;\n      }\n      const error = new Error();\n      error.response = response;\n      throw error;\n    },\n    {\n      placeholderData: [],\n    }\n  );\n};\n\nconst useListPlaylistItems = (playlistId) => {\n  return useInfiniteQuery(\n    [\"playlistItems\", playlistId],\n    async ({ pageParam: pageToken }) => {\n      try {\n        const response = await listPlaylistItems.playlistId(\n          playlistId,\n          pageToken\n        );\n        if (response.result.items?.length > 0) {\n          const ids = response.result.items.map((playlistItem) => {\n            return playlistItem.snippet.resourceId.videoId;\n          });\n          const res = await listVideos.videoId(ids);\n\n          response.result.items.forEach((playlistItem, i) => {\n            playlistItem.video = res.result.items[i];\n          });\n        }\n\n        return {\n          playlistItemsList: response.result.items,\n          playlistItemsToken: response.result.nextPageToken,\n        };\n      } catch (e) {}\n      return {};\n    },\n    {\n      placeholderData: [],\n      getNextPageParam: (lastPage) => {\n        return lastPage.playlistItemsToken;\n      },\n      select: (data) => {\n        return [].concat(\n          ...data.pages.map((page) => {\n            return page.playlistItemsList || [];\n          })\n        );\n      },\n    }\n  );\n};\n\nconst useDeletePlaylistItems = (playlistId) => {\n  const timeoutId = useRef(null);\n  const queryClient = useQueryClient();\n  const queryKey = [\"playlistItems\", playlistId];\n  return useMutation(\n    (playlistItemIds) => {\n      return Promise.all(\n        playlistItemIds.map(async (playlistItemId) => {\n          await deletePlaylistItems.playlistItemId(playlistItemId);\n        })\n      );\n    },\n    {\n      onMutate: async (variables) => {\n        clearTimeout(timeoutId.current);\n        await queryClient.cancelQueries(queryKey);\n        const previousState = queryClient.getQueryData(queryKey);\n\n        queryClient.setQueryData(queryKey, (oldData) => {\n          return {\n            ...oldData,\n            pages: oldData.pages.map((page) => {\n              return {\n                ...page,\n                playlistItemsList: page.playlistItemsList\n                  .filter((playlistItem) => {\n                    return !variables.includes(playlistItem.id);\n                  })\n                  .map((playlistItem, i) => {\n                    playlistItem.snippet.position = i;\n                    return playlistItem;\n                  }),\n              };\n            }),\n          };\n        });\n\n        return previousState;\n      },\n      onError: (err, variables, previousState) => {\n        clearTimeout(timeoutId.current);\n        queryClient.setQueryData(queryKey, previousState);\n      },\n      onSuccess: () => {\n        clearTimeout(timeoutId.current);\n        timeoutId.current = setTimeout(() => {\n          queryClient.invalidateQueries(queryKey);\n        }, 20 * 1000);\n      },\n    }\n  );\n};\n\nexport { useDeletePlaylistItems, useListPlaylists, useListPlaylistItems };\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Flip, ToastContainer } from \"react-toastify\";\n\nimport { initClient, toggleUser } from \"./api/apiHandler\";\nimport HeaderView from \"./components/Header/HeaderView\";\nimport ChannelsPage from \"./containers/Channels/ChannelsPage\";\nimport PlaylistsPage from \"./containers/Playlists/PlaylistsPage\";\n\nconst App = () => {\n  const [ready, setReady] = useState(false);\n  const [user, setUser] = useState({ isAuthorized: false });\n\n  useEffect(() => {\n    initClient(setReady, setUser);\n  }, []);\n\n  return (\n    <>\n      <HeaderView user={user} toggleUser={toggleUser} />\n      <ToastContainer\n        position=\"top-right\"\n        transition={Flip}\n        autoClose={10000}\n        closeOnClick\n        pauseOnFocusLoss\n        pauseOnHover\n      />\n      {ready && (\n        <Switch>\n          <Route path=\"/channel/:channelId\">\n            <ChannelsPage />\n          </Route>\n          <Route path=\"/playlist/:playlistId\">\n            <PlaylistsPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n// import { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\n// import store, { persistor } from \"./store\";\n\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./index.css\";\n\nconst queryClient = new QueryClient();\nqueryClient.setDefaultOptions({\n  queries: {\n    staleTime: 1000 * 60 * 60,\n    cacheTime: Infinity,\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    retry: false,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    {/* <PersistGate persistor={persistor}> */}\n    <BrowserRouter basename=\"/youtube-playlist-manager/#\">\n      <QueryClientProvider client={queryClient}>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n        <ReactQueryDevtools />\n      </QueryClientProvider>\n    </BrowserRouter>\n    {/* </PersistGate> */}\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}